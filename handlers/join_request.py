from aiogram import Bot, Router
from aiogram.types import ChatJoinRequest
from storage import PENDING
import logging

logger = logging.getLogger(__name__)

router = Router()

@router.chat_join_request()
async def handle_chat_join_request(join_request: ChatJoinRequest, bot: Bot):
    group_chat_id = join_request.chat.id
    user = join_request.from_user
    user_id = user.id

    PENDING[(group_chat_id, user_id)] = {
        "user_full_name": user.full_name,
        "username": getattr(user, "username", None),
        "bio": getattr(join_request, "bio", None),
        "user_id": user_id,
        "step": "house"
    }

    try:
        await bot.send_message(
            user_id,
            "üëã –ß—Ç–æ–±—ã –≤—Å—Ç—É–ø–∏—Ç—å –≤ –≥—Ä—É–ø–ø—É, –æ—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ –ø–∞—Ä—É –≤–æ–ø—Ä–æ—Å–æ–≤.\n\n"
            "–®–∞–≥ 1Ô∏è‚É£: –í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –¥–æ–º–∞"
        )
        logger.info(f"–ó–∞–ø—Ä–æ—Å –Ω–∞ –≤–≤–æ–¥ –Ω–æ–º–µ—Ä–∞ –¥–æ–º–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –¥–ª—è user_id={user_id}, group_chat_id={group_chat_id}")
    except Exception as e:
        logger.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}: {e}")
        await bot.decline_chat_join_request(chat_id=group_chat_id, user_id=user_id)